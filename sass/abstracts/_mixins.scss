@import 'variables';

@mixin regular-text($font-color: #d6d6d6) {
  font: {
    family: Arial; //some google font?
    size: 1rem;
    weight: normal;
  }
  color: $font-color;
}

@mixin large-text($font-color: #d6d6d6) {
  font: {
    family: Arial;
    size: 1.5rem;
    weight: bold;
  }
  color: $font-color;
}

@mixin small-text($font-color: #d6d6d6) {
  font: {                                       //note the use of namespace! compiles to font-family, font-size, font-weight
    family: Arial;
    size: 20px;
    weight: bold;
  }
  color: $font-color;
}

@mixin normal-box () {
    padding: 0 10px 0 10px; 
    // what else?
}
/* 
@mixin main-nav {
    li {
        width: (100% / $numberOfItems);
    }

    a {
        color: $textColor1;
        &:hover {
            color: $highlightColor;
        }
    }
} */

@mixin content-centering {
  //width: $contentWidth2;
  margin-left: auto;
  margin-right: auto;
}

// at everyone - consider using this to remove hover-effect for touch devices.
@mixin media-set {
  @media (hover: hover) {
    a:hover {
      color: $highlight-color;
    }
  }
}

@mixin footer-icons {
    img {
        filter: invert(10%);
       /*  &:hover {
            filter: invert(100%);
        } */
        @media (hover: hover) {  //to remove the 'highlight remains'issue on hover-enabled devices!
          &:hover {
            filter: invert(30%);
          }

    }
}
}

@mixin auto-img-size {
  img {
    max-width:100%;
    height:auto;
  }
}

@mixin media-q ($arg){                          //parse in width in px
    @media screen and (max-width: $arg) {
      //display: flex;
      //font-size: $regFontSize;//16px; //out commented because it causes a parse error 
        @content;                               //parse in other stuff where mixin in called
                                                // could consider if statement to auto select the right media query based on screen size etc.
    }
}